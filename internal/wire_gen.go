// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"medicineApp/internal/controller"
	"medicineApp/internal/dao"
	"medicineApp/internal/model"
	"medicineApp/internal/router"
	"medicineApp/internal/service"
)

// Injectors from wire.go:

func BuildInjector() (*Injector, func(), error) {
	db, err := InitGorm()
	if err != nil {
		return nil, nil, err
	}
	consumerDao := &dao.ConsumerDao{
		DB: db,
	}
	administratorDao := &dao.AdministratorDao{
		DB: db,
	}
	distributorDao := &dao.DistributorDao{
		DB: db,
	}
	manufacturerDao := &dao.ManufacturerDao{
		DB: db,
	}
	userDao := &dao.UserDao{
		DB: db,
	}
	loginModel := &model.LoginModel{
		UserDao: userDao,
	}
	login := &controller.Login{
		LoginModel: loginModel,
	}
	consumerModel := &model.ConsumerModel{
		ConsumerDao: consumerDao,
	}
	consumer := &controller.Consumer{
		ConsumerModel: consumerModel,
	}
	administratorModel := &model.AdministratorModel{
		AdministratorDao: administratorDao,
	}
	administrator := &controller.Administrator{
		AdministratorModel: administratorModel,
	}
	manufacturerModel := &model.ManufacturerModel{
		ManufacturerDao: manufacturerDao,
	}
	manufacturer := &controller.Manufacturer{
		ManufacturerModel: manufacturerModel,
	}
	distributorModel := &model.DistributorModel{
		DistributorDao: distributorDao,
	}
	distributor := &controller.Distributor{
		DistributorModel: distributorModel,
	}
	medicineDao := &dao.MedicineDao{
		DB: db,
	}
	medicineContract := &service.MedicineContract{
		MedicineDao: medicineDao,
	}
	contractController := &controller.ContractController{
		ContractService: medicineContract,
	}
	routerRouter := &router.Router{
		ConsumerDao:      consumerDao,
		AdministratorDao: administratorDao,
		DistributorDao:   distributorDao,
		ManufacturerDao:  manufacturerDao,
		LoginAPI:         login,
		ConsumerAPI:      consumer,
		AdministratorAPI: administrator,
		ManufacturerAPI:  manufacturer,
		DistributorAPI:   distributor,
		ContractAPI:      contractController,
	}
	engine := InitGinEngine(routerRouter)
	injector := &Injector{
		Engine: engine,
	}
	return injector, func() {
	}, nil
}
